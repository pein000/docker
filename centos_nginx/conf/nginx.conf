
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
 		use epoll;                 #Linux内核2.6版本及以后下使用 支持一个进程打开大数目的socket描述符(FD) （其他有select 、poll 、kqueue 、rtsig 、/dev/poll、eventport或低效或其他平台） 
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

		##均衡负载配置项：
				#1)、轮询（默认）：每个请求按时间顺序逐一分配到不同的后端服务器，如果后端服务器down掉，能自动剔除。
				#2)、weight ：指定轮询几率，weight和访问比率成正比，用于后端服务器性能不均的情况。
				#2)、ip_hash ：每个请求按访问ip的hash结果分配，这样每个访客固定访问一个后端服务器，可以解决session的问题。
				#3)、fair（第三方）：按后端服务器的响应时间来分配请求，响应时间短的优先分配。 
				#4)、url_hash（第三方）
		upstream me.com {
             server 192.168.99.100:8000;
             server 192.168.99.100:8001;
             server 192.168.99.100:8002;

    }

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        access_log  logs/host.access.log   main;
				error_log logs/host.error.log     error;
				
        location / {
            root   html;
            index  index.html index.htm;
            
            #设置主机头和客户端真实地址，以便服务器获取客户端真实IP
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            #禁用缓存
            proxy_buffering off;
            
            #设置反向代理的地址
            proxy_pass http://me.com;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
        
       ## 静态资源 
       location ~ .*\.(gif|jpg|jpeg|png|bmp|swf|js|html|htm|css)$ {        #指定缓存文件类型
		       expires 7d;     																	 #设置浏览器过期时间7天
		       root /home/nginx/cache;          							   #静态文件根目录目录(必须对应proxy_temp_path)
		       proxy_store on;        													 #开启缓存机制
		       proxy_store_access user:rw group:rw all:rw;       #缓存读写规则
		       proxy_temp_path /home/nginx/cache;                #存放静态文件的缓存目录
		   		 #    include proxy.conf;                          # 外联proxy理的详细配置如proxy_set_header， client_max_body_size .
		       if (!-e $request_filename) { 
		              proxy_pass http://me.com;
		       }
		   }
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}